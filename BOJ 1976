#include<iostream>
#include<vector>
using namespace std;

int numofcon, numofplancon;
int mylink[201][201];
int travelplan[1001];
int parent[201];

int get_parent(int x){
	//int x_parent = get_parent(x);
	if(x==parent[x]) return x;
	int x_parent = get_parent(parent[x]);
	parent[x] = x_parent;
	return x_parent;
	
}

void union_set(int x, int y){
	int x_parent = get_parent(x);
	int y_parent = get_parent(y);
	if(x_parent>y_parent){
		parent[x_parent] = y_parent;
	}
	else if(x_parent<y_parent){
		parent[y_parent] = x_parent;
	}
}

int main(void)
{
	cin>>numofcon>>numofplancon;
	int i,k;
	for(i=1; i<=numofcon; ++i){
		parent[i]=i;
	}
	for(i=1; i<=numofcon; ++i){
		for(k=1; k<=numofcon; ++k){
			cin>>mylink[i][k];
			if(mylink[i][k]==1){
				union_set(i,k);
			}
		}
	}
	for(i=0; i<numofplancon; ++i){
		cin>>travelplan[i];
	}
	int a = get_parent(travelplan[0]);
	for(i=0;i<numofplancon; ++i){
		if(a!=get_parent(travelplan[i])){
			cout<<"NO";
			return 0;	
		} 	
	}
	cout<<"YES";
}
