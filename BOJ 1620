#include<iostream>
#include<vector>
#include<string>
#include<cctype>
#include<algorithm>
#define fastio ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
using namespace std;
int numofmon;
vector<string> dogam;
vector<pair<string, int>> realdogam;

int mystoi(string a){
	int dap=0;
	for(int i=0; i<a.length(); ++i){
		dap = dap*10;
		dap=dap+(int)(a[i]-'0');	
	}
	return dap;	
}

bool compare(pair<string,int> pair1, pair<string,int> pair2){
	return 	pair1.first<pair2.first;
} 

void realdogamsort(){
	sort(realdogam.begin()+1, realdogam.end(), compare);	
}

int findindexwithbinary(int start, int end, string s){
	if(start==end){
		return realdogam[start].second;	
	}
	int mid=(start+end)/2;
	if(s==realdogam[mid].first){
		return realdogam[mid].second;
	}
	else if(s<realdogam[mid].first){	//left
		return findindexwithbinary(start, mid-1, s);
	}
	else{	//right
		return findindexwithbinary(mid+1, end, s);
	}
}

int main(void)
{
	fastio;
	int numofquest,i, index;
	cin>>numofmon>>numofquest;
	string s;
	dogam.push_back("x");
	realdogam.push_back({"a",0});
	for(i=0; i<numofmon; ++i){
		cin>>s;
		dogam.push_back(s);	
		realdogam.push_back({s,i+1});
	}
	realdogamsort();
	/*
	for(i=1; i<=numofmon; ++i){
		cout<<realdogam[i].first<<" "<<realdogam[i].second<<endl;
	}
	cout<<"--------------\n";
	*/
	//cout<<"++++++++++++++++\n";
	for(i=0; i<numofquest; ++i){
		cin>>s;
		if(isdigit(s[0])==0){
			index = findindexwithbinary(1, numofmon, s);
			cout<<index<<"\n";
			//cout<<"moonja\n";
		}
		else{
			//cout<<"sootja\n";
			index = mystoi(s);
			//cout<<index<<endl;	
			cout<<dogam[index]<<"\n";
		}	
	}
}
