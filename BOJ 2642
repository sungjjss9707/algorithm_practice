#include<iostream>
#include<vector>
using namespace std;

int pan[7][7];
bool visit[7][7];
int dy[4] = {1,0,-1,0};
int dx[4] = {0,1,0,-1};
int jjak[7];

bool not_6(){
	int i,k, getsu=0;
	for(i=1; i<=6; ++i){
		for(k=1; k<=6; ++k){
			if(pan[i][k]!=0) getsu++;
		}
	}
	if(getsu!=6) return true;
	return false;
}

int dfs(int y, int x, int index, int hwetsu){
	//cout<<y<<","<<x<<" "<<hwetsu<<endl;
	if(hwetsu==1){
		//cout<<"zzzz"<<endl;
		return pan[y][x];
	}	
	int i, ny,nx,maju;
	for(i=0; i<4; ++i){
		ny = y+dy[i];
		nx = x+dx[i];
		if(ny>=1&&ny<=6&&nx>=1&&nx<=6){
			if(visit[ny][nx]||pan[ny][nx]==0) continue;
			visit[ny][nx] = true;
			if(i==index){
				maju = dfs(ny, nx, index,1);
			}
			else{
				maju = dfs(ny, nx, index,0);
			}
			visit[ny][nx] = false;
			if(maju!=0) return maju;
		}
	}
	return 0;
}

int solve(){
	int i,k,l,dap, ny, nx, maju;
	if(not_6()){
		return 0;
	}
	for(i=1; i<=6; ++i){
		//cout<<i<<" ";
		jjak[i] = 0;
	}
	for(i=1; i<=6; ++i){
		for(k=1; k<=6; ++k){
			visit[i][k] = false;
		}
	}
	for(i=1; i<=6; ++i){
		for(k=1; k<=6; ++k){
			if(pan[i][k]!=0){
				//cout<<i<<","<<k<<endl;
				visit[i][k] = true;
				for(l=0; l<4; ++l){
					ny = i+dy[l];
					nx = k+dx[l];
					if(ny>=1&&ny<=6&&nx>=1&&nx<=6){
						if(pan[ny][nx]==0) continue;
						//cout<<ny<<" "<<nx<<endl;
						visit[ny][nx] = true;
						maju = dfs(ny, nx, l,0);
						visit[ny][nx] = false;
						if(maju!=0){
							//cout<<pan[i][k]<<"의 짝은 "<<maju<<" 이다\n";
							jjak[pan[i][k]] = maju;
							break; 
						}
					}
				}
				visit[i][k] = false;
			}
		}
	}
	for(i=1; i<=6; ++i){
		if(jjak[i]==0) return 0;
		if(jjak[jjak[i]]!=i) return 0;
	}
	return jjak[1];
}

int main(void)
{
	int i,k;
	for(i=1; i<=6; ++i){
		for(k=1; k<=6; ++k){
			cin>>pan[i][k];
		}
	}
	cout<<solve();
	return 0;
}
