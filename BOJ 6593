#include<iostream>
#include<string>
#include<queue>
#define fastio ios::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
using namespace std;

struct quad{
	int h,y,x,d;
};

int garo, sero, height;
char apart[31][31][31];
bool visit[31][31][31];
int dh[6] = {1,0,0,-1,0,0};
int dy[6] = {0,1,0,0,-1,0};
int dx[6] = {0,0,1,0,0,-1};

void visit_clear(){
	int i,j,k;
	for(i=1; i<=height; ++i){
		for(j=1; j<=sero; ++j){
			for(k=1; k<=garo; ++k){
				visit[i][j][k] = false;
			}
		}
	}
}

void bfs(int starth, int starty, int startx, int goalh, int goaly, int goalx){
	//cout<<starth<<" "<<starty<<" "<<startx<<" - "<<goalh<<" "<<goaly<<" "<<goalx<<endl;
	visit_clear();
	visit[starth][starty][startx] = true;
	queue<quad> q;
	q.push({starth, starty, startx, 0});
	int nowh, nowy, nowx, nowd, nexth, nexty, nextx,i;
	while(!q.empty()){
		
		nowh = q.front().h;
		nowy = q.front().y;
		nowx = q.front().x;
		nowd = q.front().d;
		//cout<<nowh<<" "<<nowy<<" "<<nowx<<endl;
		q.pop();
		if(nowh==goalh&&nowy==goaly&&nowx==goalx){
			cout<<"Escaped in "<<nowd<<" minute(s).";
			return;
		}
		for(i=0; i<6; ++i){
			nexth = nowh+dh[i];
			nexty = nowy+dy[i];
			nextx = nowx+dx[i];
			//cout<<"# "<<nexth<<" "<<nexty<<" "<<nextx<<endl;
			if(nexth>=1&&nexth<=height&&nexty>=1&&nexty<=sero&&nextx>=1&&nextx<=garo){
				if(!visit[nexth][nexty][nextx]&&apart[nexth][nexty][nextx]!='#'){
					visit[nexth][nexty][nextx] = true;
					q.push({nexth, nexty, nextx, nowd+1});
				}
			}
		}
	}
	cout<<"Trapped!";
}

int main(void)
{
	fastio;
	int i,j,k, sh, sy, sx, gh, gy, gx;
	while(1){
		cin>>height>>sero>>garo;
		if(height==0&&sero==0&&garo==0){
			break;
		}
		for(i=1; i<=height; ++i){
			for(j=1; j<=sero; ++j){
				for(k=1; k<=garo; ++k){
					cin>>apart[i][j][k];
					if(apart[i][j][k]=='S'){
						sh = i;
						sy = j;
						sx = k;
					}
					else if(apart[i][j][k]=='E'){
						gh = i;
						gy = j;
						gx = k;
					}
				}
			}
		}
		bfs(sh, sy, sx, gh, gy, gx);
		cout<<"\n";
	}	
	return 0;
}
