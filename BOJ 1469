#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

int numofnum, shomsize;
//int usingnum[11];
int shom[10];
//vector<int> shom;
vector<int> v;
int usingnum[10];
int hochool=0;

bool check(){
	int i;
	int check[21];
	for(i=0; i<v.size(); ++i){
		check[i]=0;	
	}
	for(i=0; i<v.size(); ++i){
		if(i+v[i]+1<=v.size()-1){
			if(v[i+v[i]+1]==v[i]) check[i]++;
		}
		if(i-v[i]-1>=0){
			if(v[i-v[i]-1]==v[i]) check[i]++;
		}	
	}
	for(i=0; i<v.size(); ++i){
		if(check[i]==0) return false;	
	}
	return true;
}

void printv(){
	for(int i=0; i<v.size(); ++i){
		cout<<v[i]<<" ";
	}
	cout<<"\n";
}

void findshom(){
	//printv();
	//hochool++;
	if(v.size()==2*numofnum){
		//if(!check()) return;
		/*
		for(int i=0; i<v.size(); ++i){
			cout<<v[i]<<" ";
		}
		cout<<endl;
		*/
		for(int i=0; i<v.size(); ++i){
			cout<<v[i]<<" ";
		}
		//cout<<endl<<hochool<<endl;
		exit(0);
	}
	int i, nownum,size;
	for(i=0; i<numofnum; ++i){
		nownum = shom[i];
		size = v.size();
		if(usingnum[i]==2){
			usingnum[i]--;
			v.push_back(nownum);
			findshom();
			usingnum[i]++;
			v.pop_back();
		}
		else if(usingnum[i]==1&&size-nownum>=1){
			//cout<<v.size()<<" "<<nownum<<endl;
		//else if(usingnum[i]==1){	
			if(v[size-nownum-1]==nownum){
				usingnum[i]--;
				v.push_back(nownum);
				findshom();
				usingnum[i]++;
				v.pop_back();
			}
		}
	}
	
}

int main(void)
{
	cin>>numofnum;
	int i, num;
	for(i=0; i<numofnum; ++i){
		//cin>>num;
		cin>>shom[i];
		usingnum[i]=2;
		//shom.push_back(num);
		//shom.push_back(num);
	}
	//shomsize = shom.size();
	//sort(shom.begin(), shom.end());
	sort(shom, shom+numofnum);
	findshom();
	cout<<-1;
	//cout<<endl<<hochool<<endl;
	return 0;
}
