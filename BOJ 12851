#include<iostream>
#include<queue>
using namespace std;

int b_pos, s_pos;
int choiso_dist=2000000000;
int visit[100001];
int hwetsu[100001];

void solve(){
	int i;
	for(i=0; i<=100000; ++i){
		visit[i] = 0;
	}
	//visit[s_pos] = 1;
	int now_s = s_pos, next_s, now_h, dap=0;
	queue<pair<int, int>> q;
	q.push({now_s, 0});
	while(!q.empty()){
		now_s = q.front().first;
		now_h = q.front().second;
		//cout<<now_h<<" "<<now_s<<endl;
		q.pop();
		visit[now_s] = 1;
		if(now_h>choiso_dist) continue;
		if(now_s==b_pos&&dap==0){
			choiso_dist = now_h;
			dap++;
			continue;
		}
		if(now_s==b_pos&&dap!=0){
			dap++;
			continue;
		}
		if(2*now_s<=100000){
			
			if(visit[2*now_s]==0){
				q.push({2*now_s, now_h+1});	
			}
		}
		if(now_s-1>=0){
			
			if(visit[now_s-1]==0){
				q.push({now_s-1, now_h+1});	
			}
		}
		if(now_s+1<=100000){
			
			if(visit[now_s+1]==0){
				q.push({now_s+1, now_h+1});	
			}
		}
	}
	cout<<choiso_dist<<"\n"<<dap;

}



int main(void)
{
	cin>>s_pos>>b_pos;
	solve();
	return 0;
}
