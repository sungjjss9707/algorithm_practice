#include<iostream>
#include<vector>
using namespace std;

long long s,f,m, numofsosu;
vector<long long> sosu;
long long sosu_getsu_total[10000];
long long sosu_getsu_s[10000]; 
long long sosu_getsu_m[10000];
long long sosu_getsu[10000];
long long eras[100001];

void get_sosu(){
	int i,k;
	for(i=2; i<=m; ++i){
		eras[i]=0;
	}
	for(i=2; i<=m; ++i){
		if(eras[i]==0){
			sosu.push_back(i);
			for(k=i; k<=m; k+=i){
				eras[k]=-1;
			}
		}
	}
	/*
	for(i=0; i<sosu.size(); ++i){
		cout<<sosu[i]<<" ";
	}
	*/
	numofsosu = sosu.size();	//최대 9592 
}

void get_sosu_getsu(){
	long long k,num, hap;
	int i, index=0, total = s+f;
	
	for(i=0; i<numofsosu; ++i){
		num = sosu[i];
		hap=0;
		for(k=num; k<=total; k=k*num){
			hap+=total/k;
		}
		sosu_getsu_total[index++] = hap;
	}
	index=0;
	for(i=0; i<numofsosu; ++i){
		num = sosu[i];
		hap=0;
		for(k=num; k<=s; k=k*num){
			hap+=s/k;
		}
		sosu_getsu_s[index++] = hap;
	}
	index=0;
	for(i=0; i<numofsosu; ++i){
		num = sosu[i];
		hap=0;
		for(k=num; k<=f; k=k*num){
			hap+=f/k;
		}
		sosu_getsu_s[index]+=hap;
		index++;
	}
	index=0;
	for(i=0; i<numofsosu; ++i){
		hap = sosu_getsu_total[i]-sosu_getsu_s[i];
		sosu_getsu[index++] = hap;
	}
	/*
	for(i=0; i<numofsosu; ++i){
		cout<<sosu[i]<<" ";
	}
	cout<<endl;
	
	for(i=0; i<numofsosu; ++i){
		cout<<sosu_getsu_total[i]<<" ";
	}
	cout<<endl;
	for(i=0; i<numofsosu; ++i){
		cout<<sosu_getsu_s[i]<<" ";
	}
	cout<<endl;
	
	for(i=0; i<numofsosu; ++i){
		cout<<sosu_getsu[i]<<" ";
	}
	cout<<endl;
	*/
}

bool panstar(int decrease){
	int i,j, mok;
	long long hap,k, index=0, num;
	for(i=0; i<numofsosu; ++i){
		num = sosu[i];
		hap=0;
		mok = decrease;
		while(1){
			if(mok%num==0){
				mok=mok/num;
				hap++;
			}
			else{
				break;
			}
		}
		
		if(sosu_getsu[i]<hap) return false;
		//sosu_getsu_m[index++] = hap;
	}
	return true;
}



int get_dap(){
	int n,i,k;
	for(n=m; n>=1; --n){
		if(panstar(n)){
			return n;
		}
	}
	return 1;
}

int main(void)
{
	cin>>s>>f>>m;
	if(m==1){
		cout<<1;
		return 0;
	}
	get_sosu();
	get_sosu_getsu();
	cout<<get_dap();
} 
