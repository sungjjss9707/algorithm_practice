#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

vector<int> v;
int getsu;
int dp[61][61][61];

int get_three(int a, int b, int c, int hwetsu){
	if(a<=0&&b<=0&&c<=0){
		return hwetsu;
	}
	int big, mid, small;
	if(a<0) a=0;
	if(b<0) b=0;
	if(c<0) c=0;
	if(a>=b&&b>=c){
		big = a; mid = b; small = c;
	}
	else if(a>=c&&c>=b){
		big = a; mid = c; small = b;
	}
	else if(b>=a&&a>=c){
		big = b; mid = a; small = c;
	}
	else if(b>=c&&c>=a){
		big = b; mid = c; small = a;
	}
	else if(c>=a&&a>=b){
		big = c; mid = a; small = b;
	}
	else{
		big = c; mid = b; small = a;
	}
	if(dp[big][mid][small]!=-1){
		return dp[big][mid][small];
	}
	int na=big, nb=mid, nc=small, ret=2100000000;
	if(na>0&&nb>0&&nc>0){
		na-=9;nb-=3;nc-=1;
		ret = min(ret,get_three(na, nb, nc, hwetsu+1));
		na=big, nb=mid, nc=small;
		
		na-=9;nb-=1;nc-=3;
		ret = min(ret,get_three(na, nb, nc, hwetsu+1));
		na=big, nb=mid, nc=small;
		
		na-=3;nb-=9;nc-=1;
		ret = min(ret,get_three(na, nb, nc, hwetsu+1));
		na=big, nb=mid, nc=small;
		
		na-=3;nb-=1;nc-=9;
		ret = min(ret,get_three(na, nb, nc, hwetsu+1));
		na=big, nb=mid, nc=small;
		
		na-=1;nb-=3;nc-=9;
		ret = min(ret,get_three(na, nb, nc, hwetsu+1));
		na=big, nb=mid, nc=small;
		
		na-=1;nb-=9;nc-=3;
		ret = min(ret,get_three(na, nb, nc, hwetsu+1));
		na=big, nb=mid, nc=small;
	}
	else if(na>0&&nb>0){
		na-=9;nb-=3;
		ret = min(ret,get_three(na, nb, nc, hwetsu+1));
		na=big, nb=mid;
		
		na-=3;nb-=9;
		ret = min(ret,get_three(na, nb, nc, hwetsu+1));
		na=big, nb=mid;
	}
	else{	//na만 0보다 큼  
		na-=9;
		ret = min(ret,get_three(na, nb, nc, hwetsu+1));
		na=big;
	}
	dp[big][mid][small] = ret;
	return ret; 
}

void dp_clear(){
	int i,j,k;
	for(i=0; i<=60; ++i){
		for(j=0; j<=60; ++j){
			for(k=0; k<=60; ++k){
				dp[i][j][k] = -1;
			}
		}
	}
}

int solve(){
	int dap, a,b,c;
	sort(v.begin(), v.end());
	dp_clear();
	if(getsu==1){
		a = v[0];
		b = 0;
		c = 0;
	}
	else if(getsu==2){
		a = v[1];
		b = v[0];
		c = 0;
	}
	else{
		a = v[2];
		b = v[1];
		c = v[0];
	}
	dap = get_three(a,b,c,0);
	return dap;
}

int main(void)
{
	cin>>getsu;
	int i, num;
	for(i=0; i<getsu; ++i){
		cin>>num;
		v.push_back(num);
	}
	cout<<solve();
	return 0;
}
