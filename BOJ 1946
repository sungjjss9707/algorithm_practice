#include<iostream>
#include<vector>
#include<algorithm>
#define fastio ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
using namespace std;


int numofpeople, biggesthap;
vector<pair<int,int>> ranking;
int index_count[100001];

bool comp(pair<int, int> &a, pair<int, int> &b) {
    return a.first < b.first;
}

void clear(){
	ranking.clear();
	for(int i=0; i<numofpeople; ++i){
		index_count[i]=0;
	}
}


int calcul(){
	if(numofpeople==1){
		return 1;
	}
	int i, hap=0, temp;
	int top_y = ranking[0].second;
	for(i=1; i<numofpeople; ++i){
		if(ranking[i].second>top_y){
			hap++;
		}
		else{
			top_y = ranking[i].second;
		}
	}
	
	return numofpeople-hap;
}

int main(void)
{
	fastio;
	int testcase,i,k, t,a,b, dap;
	cin>>testcase;
	for(t=0; t<testcase; ++t){
		clear();
		cin>>numofpeople;
		for(i=0; i<numofpeople; ++i){
			cin>>a>>b;
			ranking.push_back({a,b});
		}
		
		sort(ranking.begin(), ranking.end(), comp);
		/*
		for(i=0; i<numofpeople; ++i){
			//cout<<"시발 : "; 
			cout<<ranking[i].first<<" "<<ranking[i].second<<"\n";
		}
		*/
		dap = calcul();
		cout<<dap<<"\n";

	}
}
