#include<iostream>

using namespace std;

int numofnum;
int sooyeol[51];
int gop, the;
/*
int get_choisogong(int a, int b){
	int temp,big = max(a,b), small = min(a,b);
	while(1){
		cout<<big<<" "<<small<<endl;
		if(small==0) break;
		temp = big;
		big = max(big%small, small);
		small = min(temp%small, small);
	}
	return a*b/big;
}
*/
void gaus_sogeo(){
	
	int sik[2][2];
	int dap[2][1];
	int temp;
	sik[0][0] = sooyeol[0];
	sik[1][0] = sooyeol[1];
	sik[0][1] = 1;
	sik[1][1] = 1;
	dap[0][0] = sooyeol[1];
	dap[1][0] = sooyeol[2];
	//cout<<sik[0][0]<<" "<<sik[1][0]<<endl;
	//cout<<get_choisogong(sik[0][0], sik[1][0]);
	
	temp = sik[0][0];
	if(temp==0){
		the = dap[0][0]/sik[0][1];
		gop = (dap[1][0]-sik[1][1]*the)/sik[1][0];
		return;
		//cout<<"씨발 "<<gop<<" "<<the<<endl; 
	}
	else{
		if(sik[1][0]==0){
			the = dap[1][0];
			gop = (dap[0][0]-the)/sik[0][0];
			return;
		}
		sik[0][0] = sik[0][0]*sik[1][0];
		sik[0][1] = sik[0][1]*sik[1][0];
		dap[0][0] = dap[0][0]*sik[1][0];
		sik[1][0] = (-1)*sik[1][0]*temp;
		sik[1][1] = (-1)*sik[1][1]*temp;
		dap[1][0] = (-1)*dap[1][0]*temp;
		sik[1][0] = sik[1][0]+sik[0][0];
		sik[1][1] = sik[1][1]+sik[0][1];
		dap[1][0] = dap[1][0]+dap[0][0];
	}
	
	temp = sik[1][1];
	if(temp==0){
		cout<<"B";
		exit(0);
	}
	else{
		if(sik[0][1]==0){
			if(sik[0][0]==0){
				cout<<"B";
		exit(0);
			}
			else{
				if(sik[1][1]==0){
					cout<<"B";
		exit(0);
				}
				else{
					gop = dap[0][0]/sik[0][0];
					the = dap[1][0]/sik[1][1];
					return;
				}
					
			}
			
		}
		sik[1][0] = sik[1][0]*sik[0][1];
		sik[1][1] = sik[1][1]*sik[0][1];
		dap[1][0] = dap[1][0]*sik[0][1];
		sik[0][0] = (-1)*sik[0][0]*temp;
		sik[0][1] = (-1)*sik[0][1]*temp;
		dap[0][0] = (-1)*dap[0][0]*temp;
		sik[0][0] = sik[0][0]+sik[1][0];
		sik[0][1] = sik[0][1]+sik[1][1];
		dap[0][0] = dap[0][0]+dap[1][0];
	}
	
	//cout<<sik[0][0]<<" "<<sik[0][1]<<" = "<<dap[0][1]<<endl;;
	//cout<<sik[1][0]<<" "<<sik[1][1]<<" = "<<dap[1][1]<<endl;

	gop = dap[0][0]/sik[0][0];
	the = dap[1][0]/sik[1][1];
	//cout<<gop<<" "<<the<<endl;
}

bool panstar(){
	int i;
	for(i=0; i<numofnum-1; ++i){
		if(gop*sooyeol[i]+the!=sooyeol[i+1]) return false;
	}
	return true;
}

int get_next_num(){
	return sooyeol[numofnum-1]*gop+the;
}

bool all_same(){
	int i, first = sooyeol[0];
	for(i=0; i<numofnum; ++i){
		if(first!=sooyeol[i]) return false;
	}
	return true;
}

int main(void)
{
	cin>>numofnum; 
	int i;
	for(i=0; i<numofnum; ++i){
		cin>>sooyeol[i];
	}
	if(numofnum==1){
		cout<<"A";
		return 0;
	}
	if(numofnum==2){
		if(sooyeol[0]==sooyeol[1]) cout<<sooyeol[0];
		else cout<<"A";
		return 0;
	}
	if(sooyeol[0]==sooyeol[1]){
		if(sooyeol[1]==sooyeol[2]){	//뒤에꺼도 같은지 확인해야함  
			if(all_same()){
				cout<<sooyeol[0];
			}
			else{
				cout<<"B";
			}
		}
		else{	
			cout<<"B";
		} 
		return 0;
	}
	gaus_sogeo();
	if(panstar()){
		cout<<get_next_num();
	}
	else{
		cout<<"B";
	}
	return 0;
}
