#include<iostream>
#include<vector>
using namespace std;

int num[12];
int numofnum;
int biggest=-2000000000;
int smallest=2000000000;
vector<int>sachik;
vector<int> opersoonseo;
int operuse[12];

int calculsik(){
	int dap=num[0];
	for(int i=0;i<numofnum-1;++i){
		if(opersoonseo[i]==0){
			dap=dap+num[i+1];
		}
		else if(opersoonseo[i]==1){
			dap=dap-num[i+1];
		}
		else if(opersoonseo[i]==2){
			dap=dap*num[i+1];
		}
		else{
			dap=dap/num[i+1];
		}
	}
	return dap;
}

void calculchoidaechoiso(){
	if(opersoonseo.size()==numofnum-1){
		int dap=calculsik();
		biggest = max(biggest,dap);
		smallest=min(smallest,dap);
		return;	
	}
	
	int i;
	for(i=0;i<numofnum-1;++i){
		if(operuse[i]==0){
			operuse[i]=1;
			opersoonseo.push_back(sachik[i]);
			calculchoidaechoiso();
			operuse[i]=0;
			opersoonseo.pop_back();
		}
	}
}

int main(void)
{
	cin>>numofnum;
	int oper,k,i;
	for(i=0;i<numofnum;++i){
		cin>>num[i];
		operuse[i]=0;
	}
	for(i=0;i<4;++i){
		cin>>oper;
		for(k=0;k<oper;++k){
			sachik.push_back(i);
		}
	}
	calculchoidaechoiso();
	cout<<biggest<<"\n"<<smallest;
	return 0;
}
