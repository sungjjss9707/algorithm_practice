#include<iostream>

using namespace std;
int triangle[501][501];
int dp[501][501];
int side;

int choidaevalue(int y, int x){
	if(dp[y][x]!=-1) return dp[y][x];
	if(y==1){
		dp[1][1] = triangle[1][1];
		return dp[1][1];	
	} 
	int ret;
	if(x==1){
		ret = choidaevalue(y-1, x)+triangle[y][x];
		dp[y][x] = ret;
		return ret;		
	}
	if(y==x){
		ret = choidaevalue(y-1, x-1)+triangle[y][x];
		dp[y][x] = ret;
		return ret;
	}
	
	int hap = max(choidaevalue(y-1, x-1),choidaevalue(y-1, x));
	ret = hap+triangle[y][x];
	dp[y][x] = ret;
	return ret;
}

int getbiggest(){
	int i, num=-1;
	for(i=1; i<=side; ++i){
		num = max(num, choidaevalue(side, i));
	}
	return num;
}

int main(void)
{
	cin>>side;
	int i,k;
	for(i=1; i<=side; ++i){
		for(k=1; k<=i; ++k){
			cin>>triangle[i][k];
			dp[i][k]=-1;
		}
	}
	cout<<getbiggest();
}
