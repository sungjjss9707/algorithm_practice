#include<iostream>

using namespace std;

int n,m;
int testcase[100001];
int arr[1000001];
int sosu[1000001];
int biggest=0, numofsosu;
//int sosu[10000];

void calcul(int goal){
	int biggestindex;
	int i,k;
	if(goal==biggest){
		biggestindex = numofsosu-1;
		//cout<<goal<<" "<<numofsosu-1<<" "<<sosu[numofsosu-1]<<"\n";
	}
	else{
		for(i=0; sosu[i]<=goal; ++i){	
		}
		//cout<<goal<<" "<<i-1<<" "<<sosu[i-1]<<endl;	
		biggestindex = i-1;
	}
	//cout<<biggestindex<<" "<<sosu[biggestindex]<<"\n";
	int hap;
	for(i=0; i<biggestindex; ++i){
		for(k=biggestindex; k>=i; --k){
			hap = sosu[i]+sosu[k];
			if(hap<goal){
				break;
			}
			else if(hap==goal){
				cout<<goal<<" = "<<sosu[i]<<" + "<<sosu[k]<<"\n";
				return;
			}
		}
	}
	
	
}

int main(void)
{
	/*
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	*/
	int i,k, j,gop, numoftestcase=0;
	while(1){
		cin>>n;
		if(n==0) break;
		testcase[numoftestcase++] = n;
		if(n>biggest) biggest = n;
	}
	//cout<<biggest<<"\n";	//제일큰거 
	j=0;
	for(i=2; i<=biggest; ++i){
		if(arr[i]!=1){
			sosu[j++] = i;
		//cout<<i<<"\n";	
			gop=i;
			for(k=1; gop<=biggest; k++){
				arr[gop]=1;
				gop=i*k;
			}
		}
	}
	numofsosu = j;
	/*
	for(i=0; i<j; ++i){
		cout<<sosu[i]<<" ";
	}
	
	cout<<"\n";
	cout<<j<<"\n";	//sosu배열의 최대 인덱스 
	*/
	int goal;
	for(i=0; i<numoftestcase; ++i){
		goal = testcase[i];
		calcul(goal);
	}
	/*
	for(i=0; i<j; ++i){
		cout<<sosu[i]<<" ";
	}	
	*/
	//cout<<"\n";
	/*
	for(i=0; i<numoftestcase; ++i){
		cout<<testcase[i]<<" ";
	}
	cout<<"\n"<<biggest;
	*/
	/*
	while(1){
		cin>>n;
		if(n==0) break;
		j=0;
		for(i=2; i<=n; ++i){
			if(arr[i]!=1){
				sosu[j++] = i;
			//cout<<i<<"\n";	
				gop=i;
				for(k=1; gop<=n; k++){
					arr[gop]=1;
					gop=i*k;
				}
			}
		}
		cout<<j<<"\n";
		for(i=0; i<j; ++i){
			cout<<sosu[i]<<" ";
		}	
		cout<<"\n";
	}
	*/

}
