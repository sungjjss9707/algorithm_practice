#include<iostream>

using namespace std;

int dp[5001][5001];
long long mod = 1000000007;
int brute_force(int open, int close, int num){
	if(close<0||open<0||close>open) return 0;
	if(open==0&&close==0) return 1;
	int ret = dp[open][close];
	if(ret!=-1) return ret;
	long long dap = 0;
	dap = (dap+brute_force(open-1, close, num))%mod;
	dap = (dap+brute_force(open, close-1, num))%mod;
	dp[open][close] = (int)(dap);
	return dap;
}


int solve(int num){
	if(num%2==1) return 0;
	int dap = brute_force(num/2,num/2,num);
	return dap;
}

void dp_clear(){
	int i,k;
	for(i=0; i<=5000; ++i){
		for(k=0; k<=5000; ++k){
			dp[i][k] = -1;
		}
	}
}

int main(void)
{
	int testcase, i, num;
	cin>>testcase;
	dp_clear();
	for(i=0; i<testcase; ++i){
		cin>>num;
		cout<<solve(num)<<"\n";
	}	
	return 0;
}
