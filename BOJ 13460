#include<iostream>
#include<vector>
using namespace std;

vector<int> command;
char mymap[11][11];
int garo, sero, num;
int rypos, rxpos, bypos, bxpos, oypos, oxpos, dap=1000;

void printvec(){
	int i;
	for(i=0; i<command.size(); ++i){
		cout<<command[i]<<" ";	
	}
	cout<<endl;	
}

bool bothfall(int y, int x, int flag){
	int i;
	if(flag==1){
		for(i=x; i<=garo; ++i){
			if(mymap[y][i]=='#') return false;
			if(mymap[y][i]=='O') return true;
		}
	}
	else if(flag==2){
		for(i=x; i>=1; --i){
			if(mymap[y][i]=='#') return false;
			if(mymap[y][i]=='O') return true;
		}
	}
	else if(flag==3){
		for(i=y; i>=1; --i){
			if(mymap[i][x]=='#') return false;
			if(mymap[i][x]=='O') return true;
		}
	}
	else{
		for(i=y; i<=sero; ++i){
			if(mymap[i][x]=='#') return false;
			if(mymap[i][x]=='O') return true;
		}
	}
	return false;
	
}

int moveball(){
	int i,j,k, lastry,lastrx,lastby,lastbx;
	int ry=rypos, rx=rxpos, by=bypos, bx=bxpos;
	//cout<<ry<<" "<<rx<<" , "<<by<<" "<<bx<<endl;
	for(i=0; i<10; ++i){
		if(command[i]==1){	//오 
			if(rx<bx){	//파란거부터오른쪽으로 움직임 
				while(1){
					lastry=ry;
					lastrx=rx;
					lastby=by;
					lastbx=bx;
					bx++;
					if(mymap[by][bx]=='O'){
						return 100;	
					}
					else if(mymap[by][bx]=='#'){
						bx--;	
					}
					
					rx++;
					if(mymap[ry][rx]=='O'){
						return i+1;	
					}
					else if(mymap[ry][rx]=='#'||(ry==by&&rx==bx)){
						rx--;	
					}
		
					if(lastry==ry&&lastrx==rx&&lastby==by&&lastbx==bx){
						break;	
					}
				} 
			}
			else{	//빨간거부터오른족으로 움직임 
				while(1){
					lastry=ry;
					lastrx=rx;
					lastby=by;
					lastbx=bx;
					rx++;
					if(mymap[ry][rx]=='O'){
						if(bothfall(by,bx,1)) return 100;
						return i+1;	
					}
					else if(mymap[ry][rx]=='#'){
						rx--;	
					}
					bx++;
					if(mymap[by][bx]=='O'){
						return 100;	
					}
					else if(mymap[by][bx]=='#'||(ry==by&&rx==bx)){
						bx--;	
					}
					
					if(lastry==ry&&lastrx==rx&&lastby==by&&lastbx==bx){
						break;	
					}
				}
			}			
		}
		else if(command[i]==2){		//왼 
			if(rx>bx){	//파란거부터왼쪽으로 움직임 
				while(1){
					lastry=ry;
					lastrx=rx;
					lastby=by;
					lastbx=bx;
					bx--;
					if(mymap[by][bx]=='O'){
						return 100;	
					}
					else if(mymap[by][bx]=='#'){
						bx++;	
					}
					
					rx--;
					if(mymap[ry][rx]=='O'){
						return i+1;	
					}
					else if(mymap[ry][rx]=='#'||(ry==by&&rx==bx)){
						rx++;	
					}
		
					if(lastry==ry&&lastrx==rx&&lastby==by&&lastbx==bx){
						break;	
					}
				}
			}
			else{	//빨간거부터움직임 
				while(1){
					lastry=ry;
					lastrx=rx;
					lastby=by;
					lastbx=bx;
					
					rx--;
					if(mymap[ry][rx]=='O'){
						if(bothfall(by,bx,2)) return 100;
						return i+1;	
					}
					else if(mymap[ry][rx]=='#'){
						rx++;	
					}
					
					bx--;
					if(mymap[by][bx]=='O'){
						return 100;	
					}
					else if(mymap[by][bx]=='#'||(ry==by&&rx==bx)){
						bx++;	
					}
					if(lastry==ry&&lastrx==rx&&lastby==by&&lastbx==bx){
						break;	
					}
				}
			}
		}
		else if(command[i]==3){	//위 
			if(ry>by){	//파란거부터움직임 
				while(1){
					lastry=ry;
					lastrx=rx;
					lastby=by;
					lastbx=bx;
					by--;
					if(mymap[by][bx]=='O'){
						return 100;	
					}
					else if(mymap[by][bx]=='#'){
						by++;	
					}
					
					ry--;
					if(mymap[ry][rx]=='O'){
						return i+1;	
					}
					else if(mymap[ry][rx]=='#'||(ry==by&&rx==bx)){
						ry++;	
					}
		
					if(lastry==ry&&lastrx==rx&&lastby==by&&lastbx==bx){
						break;	
					}
				}
			}
			else{	//빨간거부터움직임 
				while(1){
					lastry=ry;
					lastrx=rx;
					lastby=by;
					lastbx=bx;
					
					ry--;
					if(mymap[ry][rx]=='O'){
						if(bothfall(by,bx,3)) return 100;
						return i+1;	
					}
					else if(mymap[ry][rx]=='#'){
						ry++;	
					}
					
					by--;
					if(mymap[by][bx]=='O'){
						return 100;	
					}
					else if(mymap[by][bx]=='#'||(ry==by&&rx==bx)){
						by++;	
					}
		
					if(lastry==ry&&lastrx==rx&&lastby==by&&lastbx==bx){
						break;	
					}
				}
			}
		}
		else{	//아래 
			if(ry<by){	//파란거부터움직임 
				while(1){
					lastry=ry;
					lastrx=rx;
					lastby=by;
					lastbx=bx;
					by++;
					if(mymap[by][bx]=='O'){
						return 100;	
					}
					else if(mymap[by][bx]=='#'){
						by--;	
					}
					
					ry++;
					if(mymap[ry][rx]=='O'){
						return i+1;	
					}
					else if(mymap[ry][rx]=='#'||(ry==by&&rx==bx)){
						ry--;	
					}
		
					if(lastry==ry&&lastrx==rx&&lastby==by&&lastbx==bx){
						break;	
					}
				}
			}
			else{	//빨간거부터움직임 
				while(1){
					lastry=ry;
					lastrx=rx;
					lastby=by;
					lastbx=bx;
					
					ry++;
					if(mymap[ry][rx]=='O'){
						if(bothfall(by,bx,4)) return 100;
						return i+1;	
					}
					else if(mymap[ry][rx]=='#'){
						ry--;	
					}
		
					by++;
					if(mymap[by][bx]=='O'){
						return 100;	
					}
					else if(mymap[by][bx]=='#'||(ry==by&&rx==bx)){
						by--;	
					}
					
					if(lastry==ry&&lastrx==rx&&lastby==by&&lastbx==bx){
						break;	
					}
				}
			}
		}
		//cout<<ry<<" "<<rx<<" , "<<by<<" "<<bx<<endl;
	}	
	return 100;
}

void bruteforce(int getsu, int yeejeon){	//1:오른쪽, 2:왼쪽,3:위쪽, :4:아래쪽 
	if(getsu==10){
		//printvec();
		//num++;
		int hwetsu = moveball();
		//cout<<hwetsu<<endl;
		dap = min(dap, hwetsu);
		//exit(0);
		return ;	
	}
	int i;
	if(yeejeon==0){	//처음일떄 
		for(i=1; i<=4; ++i){
			command.push_back(i);
			bruteforce(1, i);	
			command.pop_back();
		}
	}
	else if(yeejeon==1||yeejeon==2){	//바로전에 오른쪽또는 왼쪽  
		command.push_back(3);
		bruteforce(getsu+1, 3);	
		command.pop_back();
		command.push_back(4);
		bruteforce(getsu+1, 4);	
		command.pop_back();
	}
	
	else{	//바로전에 위쪽 또는 아래 쪽
		command.push_back(1);
		bruteforce(getsu+1,1);	
		command.pop_back();
		command.push_back(2);
		bruteforce(getsu+1,2);	
		command.pop_back();
	}
	
}

int main(void)
{
	cin>>sero>>garo;
	int i,k;
	for(i=1; i<=sero; ++i){
		for(k=1; k<=garo; ++k){
			cin>>mymap[i][k];
			if(mymap[i][k]=='R'){
				rypos=i;
				rxpos=k;	
			}
			else if(mymap[i][k]=='B'){
				bypos=i;
				bxpos=k;	
			}
			else if(mymap[i][k]=='O'){
				oypos=i;
				oxpos=k;	
			}	
		}	
	}
	bruteforce(0,0);
	//cout<<num;
	if(dap<=10) cout<<dap;
	else cout<<-1;
}
