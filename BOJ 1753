#include<iostream>
#include<vector>
#include<queue>
using namespace std;
vector<pair<int,int>> mymap[20001];
int dist[20001], visit[20001];
int start,v,e;
int inf=2000000000;

void dijkstra(){
	int i,k;
	for(i=1;i<=v;++i){
		dist[i]=inf;
		visit[i]=0;
	}
	dist[start]=0;
	
	priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> pq;
	pq.push({0,start});
	int nowv, nowd,nextv,nextd;
	while(!pq.empty()){
		nowd=(pq.top()).first;
		nowv=(pq.top()).second;
		pq.pop();
		//cout<<nowv<<" "<<nowd<<endl;
		//if(visit[nowv]==1&&nowd<dist[nowv]) continue;
		if(nowd<dist[nowv]) continue;
		//visit[nowv]=1;
		for(i=0;i<mymap[nowv].size();++i){
			nextv=mymap[nowv][i].first;
			//if(visit[nextv]==0){
				nextd=mymap[nowv][i].second;
				if(nowd+nextd<dist[nextv]){
					dist[nextv]=nowd+nextd;
					pq.push({nowd+nextd,nextv});
				}
			//}
		}
	
	}
}

int main(void)
{
	cin>>v>>e;
	cin>>start;
	int st,en, we;
	for(int i=0;i<e;++i){
		cin>>st>>en>>we;
		mymap[st].push_back({en,we});
	}
	dijkstra();
	for(int i=1;i<=v;++i){
		if(dist[i]==inf) cout<<"INF\n";
		else cout<<dist[i]<<"\n";
	}
}
