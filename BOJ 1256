#include<iostream>
#include<string>
using namespace std;

int numofa, numofz, num;

int dp[101][101];
int inf = 1000000000;

void dp_clear(){
	int i,k;
	for(i=0; i<=100; ++i){
		for(k=0; k<=100; ++k){
			dp[i][k] = -1;
		}
	}
}

int get_index(int a_getsu, int z_getsu){
	//cout<<a_getsu<<" "<<z_getsu<<endl;
	int ret = dp[a_getsu][z_getsu];
	if(ret!=-1) return ret;
	if(a_getsu==0||z_getsu==0) return 1;
	//ret = inf;
	int fix_a = get_index(a_getsu-1, z_getsu);
	int fix_z = get_index(a_getsu, z_getsu-1);
	ret = fix_a+fix_z;
	if(ret>1000000000) ret = inf;
	dp[a_getsu][z_getsu] = ret;
	//cout<<a_getsu<<" "<<z_getsu<<" "<<ret<<endl;
	return ret;
}

string solve(){
	dp_clear();
	int i,k, nam_a = numofa, nam_z = numofz, index, namojee = num;
	string dap = "";
	while(1){
		if(nam_a==0||nam_z==0){
			if(nam_a==0){
				for(i=0; i<nam_z; ++i){
					dap.push_back('z');
				}
			}
			else{
				for(i=0; i<nam_a; ++i){
					dap.push_back('a');
				}
			}
			break;
		}
		index = get_index(nam_a-1, nam_z);	//a 하나쓰기
		//cout<<namojee<<" "<<index<<endl;
		if(index>=namojee){
			//cout<<"a를 하나 씀\n"; 
			dap.push_back('a');
			nam_a--;
			continue;
		}
		namojee -= index;
		index = get_index(nam_a, nam_z-1);
		if(index<namojee){
			cout<<-1;
			//cout<<"존재불가\n";
			exit(0);
		}
		nam_z--;
		//namojee -= index;
		dap.push_back('z');
		//cout<<"z를 하나 씀\n";
	}
	return dap;
}

int main(void)
{
	cin>>numofa>>numofz>>num;
	cout<<solve();
	return 0;
}
