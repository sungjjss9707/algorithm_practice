#include<iostream>
#include<queue>
using namespace std;

struct triple{
	int y,x,change;
};

int side,inf=2000000000;
int mymap[51][51];
int numofchange[51][51];
int dy[4]={1,0,-1,0};
int dx[4]={0,1,0,-1};
int bfs(){
	int i,k;
	for(i=1; i<=side;++i){
		for(k=1; k<=side;++k){
			numofchange[i][k]=inf;
		}
	}
	int nowy,nowx,nowchange,nexty,nextx,nextchange;
	queue<triple> q;
	numofchange[1][1]=0;
	q.push({1,1,0});
	while(!q.empty()){
		nowy=q.front().y;
		nowx=q.front().x;
		nowchange=q.front().change;
		q.pop();
		for(i=0;i<4;++i){
			nexty=nowy+dy[i];
			nextx=nowx+dx[i];
			if(nexty>=1&&nexty<=side&&nextx>=1&&nextx<=side){
				if(mymap[nexty][nextx]==1){//blank
					nextchange=nowchange;
				}
				else{
					nextchange=nowchange+1;
				}
				if(nextchange<numofchange[nexty][nextx]){
					numofchange[nexty][nextx]=nextchange;
					q.push({nexty,nextx,nextchange});
				}
			}
		}
	}
	return numofchange[side][side];
}

int main(void)
{
	cin>>side;
	char num;
	int i,k;
	for(i=1; i<=side;++i){
		for(k=1; k<=side;++k){
			cin>>num;
			mymap[i][k]=(int)(num-'0');
		}
	}
	cout<<bfs();
}
