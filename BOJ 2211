#include<iostream>
#include<vector>
#include<queue>
#define fastio ios::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
using namespace std;

int numofver, numofedge, inf = 2100000000;
pair<int, int> dist[1001];	//{nowd, nowh}
vector<pair<int, int>> v[1001];
int yeejeon[1001];

void solve(){
	int nowv, nowd, nextv, nextd, nowh, nexth;
	int i;
	for(i=1; i<=numofver; ++i){
		dist[i] = {inf, inf};
		yeejeon[i] = -1;
	}
	dist[1] = {0,0};
	priority_queue<pair<int, pair<int, int>>, vector<pair<int, pair<int, int>>>, greater<pair<int, pair<int, int>>>> pq;
	pq.push({0,{1,0}});	//{nowd,{nowv, nowh}};
	while(!pq.empty()){
		nowd = pq.top().first;
		nowv = pq.top().second.first;
		nowh = pq.top().second.second;
		pq.pop();
		if(dist[nowv].first>nowd&&dist[nowv].second>nowh) continue;
		for(i=0; i<v[nowv].size(); ++i){
			nextv = v[nowv][i].first;
			nextd = v[nowv][i].second+nowd;
			if(dist[nextv].first>nextd){
				//dist[nextv].first=nextd;
				//dist[nextv].second=nowh+1;
				dist[nextv]={nextd, nowh+1};
				pq.push({nextd,{nextv, nowh+1}});
				yeejeon[nextv] = nowv;
			}
			else if(dist[nextv].first==nextd){
				if(dist[nextv].second>nowh+1){
					dist[nextv]={nextd, nowh+1};
					pq.push({nextd,{nextv, nowh+1}});
					yeejeon[nextv] = nowv;
				}
			}
		}
	}
	/*
	for(i=1; i<=numofver; ++i){
		cout<<i<<" : "<<dist[i].first<<" "<<dist[i].second<<endl;
	}
	cout<<endl;
	*/
	int dap = 0;
	for(i=1; i<=numofver; ++i){
		if(yeejeon[i]!=-1){
			dap++;
		}
	}
	cout<<dap<<"\n";
	for(i=1; i<=numofver; ++i){
		if(yeejeon[i]!=-1){
			cout<<yeejeon[i]<<" "<<i<<"\n";
		}
		
		//cout<<i<<" : "<<yeejeon[i]<<endl;
	}
}

int main(void)
{
	fastio;
	cin>>numofver>>numofedge;
	int i,s,e,t;
	for(i=0; i<numofedge; ++i){
		cin>>s>>e>>t;
		v[s].push_back({e,t});
		v[e].push_back({s,t});
	}
	solve();
	return 0;
}
