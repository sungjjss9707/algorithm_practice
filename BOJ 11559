#include<iostream>

using namespace std;

char puyo[13][7];
bool visit[13][7], del_visit[13][7];
int dy[4] = {1,0,-1,0};
int dx[4] = {0,1,0,-1};

void print_puyo(){
	int i,k;
	for(i=1; i<=12; ++i){
		for(k=1; k<=6; ++k){
			cout<<puyo[i][k]<<" ";
		}
		cout<<"\n";
	}
	cout<<"-------------\n";
}

void clear(){
	int i,k;
	for(i=1; i<=12; ++i){
		for(k=1; k<=6; ++k){
			visit[i][k] = false;
		}
	}
}
void del_visit_clear(){
	int i,k;
	for(i=1; i<=12; ++i){
		for(k=1; k<=6; ++k){
			del_visit[i][k] = false;
		}
	}
}

void drop_puyo(){
	int i,k, blank;
	for(k=1; k<=6; ++k){
		blank=0;
		for(i=12; i>=1; --i){
			if(puyo[i][k]=='.'){
				blank++;
			}
			else{
				if(blank==0) continue;
				puyo[i+blank][k] = puyo[i][k];
				puyo[i][k]='.';
			}
		}
	}
	//print_puyo();
}

int dfs(int y, int x, char c){
	visit[y][x] = true;
	int i, ny, nx, count=1;
	for(i=0; i<4; ++i){
		ny = y+dy[i];
		nx = x+dx[i];
		if(ny>=1&&ny<=12&&nx>=1&&nx<=6){
			if(!visit[ny][nx]&&puyo[ny][nx]==c){
				count+=dfs(ny,nx,c);
			}
		}
	}
	return count;
}

void dfs_del(int y, int x, char c){
	del_visit[y][x] = true;
	puyo[y][x] = '.';
	int i, ny, nx, count=1;
	for(i=0; i<4; ++i){
		ny = y+dy[i];
		nx = x+dx[i];
		if(ny>=1&&ny<=12&&nx>=1&&nx<=6){
			if(!del_visit[ny][nx]&&puyo[ny][nx]==c){
				dfs_del(ny,nx,c);
			}
		}
	}
}



int numofchain(){
	int i,k, numofdel, flag, count=0;
	while(1){
		//print_puyo();
		flag=0;
		clear();
		for(i=1; i<=12; ++i){
			for(k=1; k<=6; ++k){
				if(!visit[i][k]&&puyo[i][k]!='.'){
					numofdel = dfs(i,k,puyo[i][k]);
					if(numofdel>=4){
						
						//cout<<i<<" "<<k<<"에서 꺠지는갯수 : "<<numofdel<<endl;
						del_visit_clear();
						dfs_del(i,k,puyo[i][k]);
						//print_puyo();
						drop_puyo();
						flag = 1;
					}			
				}
				
			}
		}
		if(flag==0) break;
		count++;
	}
	return count;
}

int main(void)
{
	int i,k;
	for(i=1; i<=12; ++i){
		for(k=1; k<=6; ++k){
			cin>>puyo[i][k];
		}
	}
	cout<<numofchain();
	return 0;
}
