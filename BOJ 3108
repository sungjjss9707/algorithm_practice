#include<iostream>

using namespace std;

int map[2010][2010];	//원점이 (500,500)임  
//범위는 (0,0) 부터 (1000,1000)까지 가능해야함 

int dy[4] = {1,0,-1,0};
int dx[4] = {0,1,0,-1};

void dfs(int nowy, int nowx, int nowindex){
	map[nowy][nowx] = nowindex;
	int i;
	int nexty, nextx;
	for(i=0; i<4; ++i){
		nexty = nowy+dy[i];
		nextx = nowx+dx[i];
		if(nexty>=0&&nexty<=2002&&nextx>=0&&nextx<=2002){
			if(map[nexty][nextx]==-1){
				dfs(nexty, nextx, nowindex);
			}
		}
	}
}

 
int main(void)
{
	int numofrect,i,j,k;
	int index,flag=0;
	int x1, y1, x2, y2;
	cin>>numofrect;
	for(i=0; i<numofrect; ++i){
		cin>>x1>>y1>>x2>>y2;
			
		x1 = 2*(x1+500);
		x2 = 2*(x2+500);
		y1 = 2*(y1+500);
		y2 = 2*(y2+500);
			/*
			x1 = x1*2;
			x2 = x2*2;
			y1 = y1*2;
			y2 = y2*2;
			*/
		for(k=x1; k<=x2; ++k){
			map[y1][k] = -1;
			map[y2][k] = -1;
		}
		for(k=y1; k<=y2; ++k){
			map[k][x1] = -1;
			map[k][x2] = -1;
		}
		
		for(k=x1; k<=x2; ++k){
			map[y1][k] = -1;
			map[y2][k] = -1;
		}
		for(k=y1; k<=y2; ++k){
			map[k][x1] = -1;
			map[k][x2] = -1;
		}
	}
	index=0;
	
	for(i=0; i<=2002; ++i){
		for(j=0; j<=2002; ++j){
			if(map[i][j]==-1){
				index++;
				dfs(i,j,index);
			}
		}
	}
	if(map[1000][1000]!=0) index--;
	cout<<index;
	/*
	for(i=0; i<20; ++i){
		for(j=0; j<20; ++j){
			cout<<map[i][j]<<" ";
		}
		cout<<"\n";
	}
	*/
	
}
