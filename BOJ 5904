#include<iostream>
#include<vector>
using namespace std;

vector<int> getsu;

int findindex(int num){
	int init = 3, i=4;
	getsu.push_back(init);
	while(init<=1000000000){
		init = 2*init+i;
		getsu.push_back(init);
		i++;
	}
	for(i=0; i<getsu.size(); ++i){
		if(getsu[i]>num) return i;
	}
}

char samboonsearch(int start, int end, int index ,int goal, int mid){
	if(mid==1||end-start==2||end-start==3){
		if(goal==start) return 'm';
		return 'o';
	}
	int start1, start2, start3;
	start1 = start;	//1
	start2 = start+getsu[index-1];	//11
	start3 = start2+index+3;	//16
	if(goal<start2){
		return samboonsearch(start1, start2-1, index-1, goal, 0);
	}
	if(goal<start3){
		return samboonsearch(start2, start3-1, index-1, goal, 1);
	}
	return samboonsearch(start3, end, index-1, goal, 0);
}

char findmoo(int i){
	int index = findindex(i);
//	cout<<index<<" "<<getsu[index];
	char dap = samboonsearch(1, getsu[index],index, i,0);//1 25 2 11
	return dap;
}

int main(void)
{
	int num;
	cin>>num;
	cout<<findmoo(num);
	/*
	for(int i=1; i<=25; ++i){
		cout<<findmoo(i);
	}
	*/
}
