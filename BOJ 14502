#include<iostream>
#include<vector>
using namespace std;

int map[9][9];
int copymap[9][9];
int sero, garo;
vector<pair<int, int>> v;
int check[65];
int dy[4] = {1,0,-1,0};
int dx[4] = {0,1,0,-1};
int biggest=0;

void printmap(){
	int i,k;
	cout<<"\n\n";
	for(i=1; i<=sero; ++i){
		for(k=1; k<=garo; ++k){
			cout<<map[i][k]<<" ";
		}
		cout<<"\n";
	}
}

void printcopymap(){
	int i,k;
	cout<<"\n\n";
	for(i=1; i<=sero; ++i){
		for(k=1; k<=garo; ++k){
			cout<<copymap[i][k]<<" ";
		}
		cout<<"\n";
	}
}

void mapcopy(){
	int i,k;
	for(i=1; i<=sero; ++i){
		for(k=1; k<=garo; ++k){
			copymap[i][k] = map[i][k];
		}
	}
}

int countzero(){
	int i,k, sum=0;
	for(i=1; i<=sero; ++i){
		for(k=1; k<=garo; ++k){
			if(copymap[i][k]==0) sum++;
		}
	}
	return sum;
}

void dfs(int nowy, int nowx){
	copymap[nowy][nowx]=3;
	int i, nexty, nextx;
	for(i=0; i<4; ++i){
		nexty = nowy+dy[i];
		nextx = nowx+dx[i];
		if(nexty>=1&&nexty<=sero&&nextx>=1&&nextx<=garo){
			if(copymap[nexty][nextx]==0){
				dfs(nexty, nextx);
			}
		}
	}
}

void bruteforce(int index, int yeejeonindex){
	if(index==3){
		mapcopy();
		int i,k;
		for(i=1; i<=sero; ++i){
			for(k=1; k<=garo; ++k){
				if(copymap[i][k]==2){
					dfs(i,k);
				}
			}
		}
		//printcopymap();
		int zerogetsu = countzero();
		if(biggest<zerogetsu) biggest = zerogetsu;
		return;
	}
	int i,y,x;
	for(i=0; i<v.size(); ++i){
		if(check[i]==0&&i>yeejeonindex){
			check[i]=1;
			y=v[i].first;
			x=v[i].second;
			map[y][x] = 1;
			bruteforce(index+1, i);
			check[i]=0;
			map[y][x] = 0;
		}
	}
}

int main(void)
{
	cin>>sero>>garo;
	int i,k, num;
	for(i=0; i<65; ++i){
		check[i]=0;
	}
	for(i=1; i<=sero; ++i){
		for(k=1; k<=garo; ++k){
			cin>>num;
			if(num==0) v.push_back({i,k});
			map[i][k] = num;
		}
	}
	int y,x;
	bruteforce(0, -1);
	/*
	for(i=0; i<v.size(); ++i){
		if(check[i]==0){
			check[i]=1;
			y=v[i].first;
			x=v[i].second;
			map[y][x] = 1;
			bruteforce(1, i);
			check[i]=0;
			map[y][x] = 0;
		}
	}
	*/
	cout<<biggest;
		
}
