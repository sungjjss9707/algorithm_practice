#include<iostream>
#include<algorithm>
#define fastio ios::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
using namespace std;

int num;
pair<long long, int> arr[1000001];
pair<long long, int> temp[1000001];
long long cha[1000001];

void cha_clear() {
	int i;
	for (i = 0; i < 1000001; ++i) {
		cha[i] = -1;
	}
}

bool compare(pair<long long, int> p1, pair<long long, int> p2) {
	if (p1.first == p2.first) {
		return p1.second < p2.second;
	}
	return p1.first > p2.first;
}

long long solve() {

	int i, index,k;
	long long n;
	for (i = 0; i < num; ++i) {
		temp[i] = arr[i];
	}
	sort(temp, temp + num, compare);
	/*
	for (i = 0; i < num; ++i) {
		n = arr[i].first;
		index = arr[i].second;
		cout << n << " " << index << endl;
	}
	*/
	for (i = 0; i < num; ++i) {
		n = temp[i].first;
		index = temp[i].second;
		if (cha[index]!=-1) continue;
		for (k = index; k >= 0; --k) {
			if (cha[k] != -1) break;
			cha[k] = n - arr[k].first;
		}
	}
	//cout << endl;
	long long dap = 0;
	for (i = 0; i < num; ++i) {
		dap+=cha[i];
	}
	//cout << endl;
	return dap;
}

int main(void)
{
	fastio;
	int testcase, t, i;
	long long n;
	cin >> testcase;
	for (t = 0; t < testcase; ++t) {
		cin >> num;
		cha_clear();
		for (i = 0; i < num; ++i) {
			cin >> n;
			arr[i] = { n, i };
		}
		cout << "#" << t + 1 << " " << solve() << "\n";
	}
	return 0;
}
