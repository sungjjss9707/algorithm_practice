#include<iostream>
#include<queue>
#include<string>
#define fastio ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
using namespace std;

int num;

deque<int> dq[1001];

void rotate(int index, int dir){
	int i, temp;
	int nowleft = dq[index][6], nowright = dq[index][2], nowindex;
	int left, right;
	for(i=index+1; i<=num; ++i){
		if(nowright==dq[i][6]){
			right = i;
			break;
		}
		else{
			nowright = dq[i][2];
			if(i==num){
				right = num+1;	
			}
		}
	}
	for(i=index-1; i>=1; --i){
		if(nowleft==dq[i][2]){
			left = i;
			break;
		}
		else{
			nowleft = dq[i][6];
			if(i==1) left = 0;
		}
	}
	if(index==1) left = index;
	if(index==num) right=index;
	//cout<<left<<","<<right<<endl;;
	if(dir==1){	//시계 
		temp = dq[index].back();
		dq[index].pop_back();
		dq[index].push_front(temp);
		nowindex=0;
		for(i=index-1; i>left; --i){
			if(nowindex%2==0){	//반시계  
				temp = dq[i].front();
				dq[i].pop_front();
				dq[i].push_back(temp);
			}
			else{
				temp = dq[i].back();
				dq[i].pop_back();
				dq[i].push_front(temp);
			}
			nowindex++;
		}
		nowindex=0;
		for(i=index+1; i<right; ++i){
			if(nowindex%2==0){	//반시계  
				temp = dq[i].front();
				dq[i].pop_front();
				dq[i].push_back(temp);
			}
			else{
				temp = dq[i].back();
				dq[i].pop_back();
				dq[i].push_front(temp);
			}
			nowindex++;
		}
	}
	else{
		temp = dq[index].front();
		dq[index].pop_front();
		dq[index].push_back(temp);
		nowindex=0;
		for(i=index-1; i>left; --i){
			if(nowindex%2==0){	//반시계  
				temp = dq[i].back();
				dq[i].pop_back();
				dq[i].push_front(temp);
			}
			else{
				temp = dq[i].front();
				dq[i].pop_front();
				dq[i].push_back(temp);
			}
			nowindex++;
		}
		nowindex=0;
		for(i=index+1; i<right; ++i){
			if(nowindex%2==0){	//반시계  
				temp = dq[i].back();
				dq[i].pop_back();
				dq[i].push_front(temp);
			}
			else{
				temp = dq[i].front();
				dq[i].pop_front();
				dq[i].push_back(temp);
			}
			nowindex++;
		}
	}
	/*
	for(i=1; i<=num; ++i){
		for(int k=0; k<8; ++k){
			cout<<dq[i][k];
		}
		cout<<endl;
	}
	cout<<endl;
	*/
}

int main(void)
{
	fastio;
	int i,k, numofquery, index, dir, n;
	char c;
	string s;
	cin>>num;
	//cout<<num<<endl;
	for(i=1; i<=num; ++i){
		cin>>s;
		for(k=0; k<s.length(); ++k){
			n = (int)(s[k]-'0');
			dq[i].push_back(n);
			
		}
	}
	cin>>numofquery;
	for(i=0; i<numofquery; ++i){
		cin>>index>>dir;
		rotate(index, dir);
	}
	int dap=0;
	for(i=1; i<=num; ++i){
		if(dq[i][0]==1) dap++;
	}
	cout<<dap;
	return 0;
} 


