#include<iostream>
#include<vector>
//제한시간 0.5초  

using namespace std;

int lenofsoosik, numofnum, numofoper;
long long maximum = -2100000000;
//vector<int> num;
//vector<char> oper;
vector<pair<int, int>> priority;
long long num[12];
char oper[11];

void printpriority(){
	int i;
	for(i=0; i<priority.size(); ++i){
		cout<<"("<<priority[i].first<<" "<<priority[i].second<<") , ";
		
	}
	cout<<endl;
}

long long calcul(){
	vector<long long> tempnum;
	vector<char> tempoper;
	int operuse[11];
	int monjohalgo[12];
	int i;
	for(i=1; i<=numofoper; ++i){
		operuse[i]=0;
	}
	for(i=1; i<=numofnum; ++i){
		monjohalgo[i]=0;
	}
	for(i=0; i<priority.size(); ++i){
		monjohalgo[priority[i].first]=1;
		monjohalgo[priority[i].second]=1;
	}
	/*
	for(i=1; i<=numofnum; ++i){
		cout<<monjohalgo[i]<<" ";
	}
	cout<<endl;
	*/
	long long temp;
	for(i=1; i<=numofnum; ++i){
		if(monjohalgo[i]==1){
			if(oper[i]=='+'){
				temp = num[i]+num[i+1];
			}
			else if(oper[i]=='-'){
				temp = num[i]-num[i+1];
			}
			else{
				temp = num[i]*num[i+1];
			}
			tempnum.push_back(temp);
			monjohalgo[i]=2;
			monjohalgo[i+1]=2;
			operuse[i]=1;
		}
		else if(monjohalgo[i]==0){
			tempnum.push_back(num[i]);
		}
	}
	for(i=1; i<=numofoper; ++i){
		if(!operuse[i]) tempoper.push_back(oper[i]);
	}
	/*
	for(i=0; i<tempnum.size(); ++i){
		cout<<tempnum[i]<<" ";
	}
	cout<<endl;
	for(i=0; i<tempoper.size(); ++i){
		cout<<tempoper[i]<<" ";
	}
	cout<<endl;
	*/
	for(i=0; i<tempoper.size(); ++i){
		if(tempoper[i]=='+'){
			temp = tempnum[i]+tempnum[i+1];
			
		}
		else if(tempoper[i]=='-'){
			temp = tempnum[i]-tempnum[i+1];
		}
		else{
			temp = tempnum[i]*tempnum[i+1];
		}
		tempnum[i+1] = temp;
	}
	/*
	for(i=0; i<tempnum.size(); ++i){
		cout<<tempnum[i]<<" ";
	}
	cout<<endl;
	*/
	return tempnum[tempnum.size()-1];
}

void bruteforce(){
	//계산 
	//printpriority();
	long long dap = calcul();
	maximum = max(maximum, dap);
	int lastindex;
	if(priority.size()==0){
		lastindex=0;
	}
	else{
		lastindex = priority[priority.size()-1].second;
	}
	
	if(lastindex==numofnum||lastindex==numofnum-1){
		return;
	}
	int firstindex = lastindex+1,i, one,two;
	for(i=firstindex; i<numofnum; ++i){
		one = i;
		two = i+1;
		priority.push_back({one, two});
		bruteforce();
		priority.pop_back();
	}
	 
}

int main(void)
{
	cin>>lenofsoosik;
	int i,n=1, o=1;
	char c;

	for(i=0; i<lenofsoosik; ++i){
		cin>>c;
		if(c>'9'||c<'0') oper[o++]=c;
		else num[n++]=(int)(c-'0');
	}
	numofnum=n-1;
	numofoper = o-1;
	//cout<<numofnum<<" "<<numofoper;
	bruteforce();
	cout<<maximum;
} 
