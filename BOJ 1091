#include<iostream>
#include<algorithm>
using namespace std;

int numofcard;
int pos[50];
int init[50];
int goal[50];
int shup[50];
pair<int, int> change[50];

bool compare(pair<int, int> p1, pair<int, int> p2){
	return p1.first<p2.first;
}

void shupple(){
	int i;
	int temp[50];
	
	for(i=0; i<numofcard; ++i){
		temp[shup[i]] = pos[i];
	}
	for(i=0; i<numofcard; ++i){
		pos[i]=temp[i];
	}
	for(i=0; i<numofcard; ++i){
		change[i] = {pos[i],i};
	}
	sort(change, change+numofcard, compare);
}

bool panstar(){
	int i;
	for(i=0; i<numofcard; ++i){
		if(change[i].second%3!=goal[i]) return false;
	}
	return true;
}

void print_card(){
	int i;
	for(i=0; i<numofcard; ++i){
		cout<<pos[i]<<" "; 
	}
	cout<<endl;
}

bool backtothefirst(){
	int i;
	for(i=0; i<numofcard; ++i){
		if(pos[i]!=init[i]) return false;
	}
	return true;
}

int main(void)
{
	cin>>numofcard;
	int i, num=0;
	for(i=0; i<numofcard; ++i){
		cin>>goal[i];
	}
	for(i=0; i<numofcard; ++i){
		cin>>shup[i];
		pos[i]=i;
		init[i] = pos[i];
		change[i].second=i;
	}
	
	//cout<<"------------------------\n";
	while(1){
		//print_card();
		if(panstar()) break;
		
		shupple();
		if(backtothefirst()){
			cout<<-1;
			exit(0);
		}
		num++;
	}
	cout<<num;
	return 0;
}
