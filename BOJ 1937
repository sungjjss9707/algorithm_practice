#include<iostream>

using namespace std;

int side;
int map[501][501];
int check[501][501];
int dy[4] = {1,0,-1,0};
int dx[4] = {0,1,0,-1};


int liveday(int nowy, int nowx){
	
	int ret = check[nowy][nowx];
	if(ret!=-1) return ret;
	int i, nexty, nextx, biggest=1;
	for(i=0; i<4; ++i){
		nexty = nowy+dy[i];
		nextx = nowx+dx[i];
		if(nexty>=1&&nexty<=side&&nextx>=1&&nextx<=side){
			if(map[nexty][nextx]>map[nowy][nowx]){
				biggest = max(biggest, liveday(nexty, nextx)+1);	
			}
		}
	}
	check[nowy][nowx] = biggest;
	return biggest;
	
}

int main(void)
{
	cin>>side;
	int i,k, biggest=0, day;
	for(i=1; i<=side; ++i){
		for(k=1; k<=side; ++k){
			cin>>map[i][k];
			check[i][k]=-1;
		}
	}
	for(i=1; i<=side; ++i){
		for(k=1; k<=side; ++k){
			day = liveday(i,k);
			biggest = max(day, biggest);
		}
	}
	/*
	for(i=1; i<=side; ++i){
		for(k=1; k<=side; ++k){
			cout<<check[i][k]<<" ";
		}
		cout<<"\n";
	}
	*/
	cout<<biggest;
	
}
