#include<iostream>
#include<queue> 
using namespace std;

/*
	1. 최대 힙의 크기는 최소 힙의 크기와 같거나, 하나 더 크다.

	2. 최대 힙의 최대 원소는 최소 합의 최소 원소보다 작거나 같다.

	이때 알고리즘에 맞지 않다면 최대 힙, 최소 힙의 가장 위의 값을 swap해준다.

	[결과] 이때 이 두가지 규칙을 유지해 준다면 항상 최대 힙 top값이 중간값이 된다.

*/

priority_queue<int, vector<int>, less<int>> max_heap;	//이거 최대힙 선언 
priority_queue<int, vector<int>, greater<int>> min_heap;	//이거 최소힙 선언 


int main(void)
{
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	int num, i, temp, temp_min, temp_max;
	cin>>num;
	cin>>temp;
	max_heap.push(temp);
	if(num==1){
		cout<<temp;
		return 0;
	}
	cout<<temp<<"\n";
	for(i=2; i<=num; ++i){
		cin>>temp;
		if(i%2==1){	//지금이 홀수번째면  
			max_heap.push(temp); 
		}
		else{		//지금이 짝수번째면 
			min_heap.push(temp);
		}
		if(max_heap.top()>min_heap.top()){
			temp_min = min_heap.top();
			temp_max = max_heap.top();
			min_heap.pop();
			max_heap.pop();
			max_heap.push(temp_min);
			min_heap.push(temp_max);
		}
		cout<<max_heap.top()<<"\n";
	}
}
