#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

int num, jo;
int kee[300001];
bool visit[300001];
vector<pair<int, pair<int, int>>> v;

bool compare(pair<int, pair<int, int>> p1, pair<int, pair<int, int>> p2){
	return p1.first>p2.first;
}

int solve(){
	int i, a,b,cha;
	for(i=1; i<num; ++i){
		cha = kee[i+1]-kee[i];
		v.push_back({cha, {i,i+1}});
	}
	//cout<<endl;
	sort(v.begin(), v.end(), compare);
	/*
	for(i=0; i<num-1; ++i){
		cout<<v[i].first<<" "<<v[i].second.first<<" "<<v[i].second.second<<endl;
	}
	*/
	for(i=0; i<num-1; ++i){
		visit[i] = false;
	}
	for(i=0; i<jo-1; ++i){
		visit[v[i].second.first] = true;
	}
	/*
	cout<<endl;
	for(i=1; i<=num; ++i){
		cout<<visit[i]<<" ";
	}
	cout<<endl;
	*/
	int start = kee[1], now, dap=0;
	for(i=1; i<=num; ++i){
		now = kee[i];
		if(visit[i]){
			//cout<<now-start<<endl;
			dap+=(now-start);
			start = kee[i+1];
		}
	}
	dap+=(kee[num]-start);
	return dap;
}

int main(void)
{
	cin>>num>>jo;
	int i;
	for(i=1; i<=num; ++i){
		cin>>kee[i];
	}
	cout<<solve();
	return 0;
}
