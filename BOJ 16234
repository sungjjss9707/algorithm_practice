#include<iostream>
#include<vector>
#define fastio ios::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
using namespace std;

int map[51][51];
int temp[51][51];
int dy[4] = {1,0,-1,0};
int dx[4] = {0,1,0,-1};
int visit[51][51];
int side, choidae, choiso;

void clear(){
	int i,k;
	for(i=1; i<=side; ++i){
		for(k=1; k<=side; ++k){
			visit[i][k] = -1;
		}
	}	
} 

void map_to_temp(){
	int i,k;
	for(i=1; i<=side; ++i){
		for(k=1; k<=side; ++k){
			temp[i][k] = map[i][k];
		}
	}
}

void temp_to_map(){
	int i,k;
	for(i=1; i<=side; ++i){
		for(k=1; k<=side; ++k){
			map[i][k] = temp[i][k];
		}
	}
}

bool isthissamemap(){
	int i,k;
	for(i=1; i<=side; ++i){
		for(k=1; k<=side; ++k){
			if(temp[i][k]!=map[i][k]) return false;
		}
	}
	return true;
}

int dfs(int y, int x, int color){
	visit[y][x] = color;
	int i, nexty, nextx, ret=1, cha;
	for(i=0; i<4; ++i){
		nexty = y+dy[i];
		nextx = x+dx[i];
		if(nexty>=1&&nexty<=side&&nextx>=1&&nextx<=side){
			cha = (abs)(map[y][x]-map[nexty][nextx]);
			if(visit[nexty][nextx]==-1&&cha>=choiso&&cha<=choidae){
				ret+=dfs(nexty, nextx, color);
			}
		}
	}
	return ret;
}

void set_avg(int color){
	int i,k, sum=0, avg,y,x;
	vector<pair<int, pair<int ,int>>> v;
	for(i=1; i<=side; ++i){
		for(k=1; k<=side; ++k){
			if(visit[i][k]==color){
				v.push_back({map[i][k],{i,k}});
			}
		}
	}
	for(i=0; i<v.size(); ++i){
		sum+=v[i].first;
	}
	avg = sum/v.size();
	for(i=0; i<v.size(); ++i){
		y = v[i].second.first;
		x = v[i].second.second;
		temp[y][x] = avg;
	}
}

void map_print(){
	int i,k;
	for(i=1; i<=side; ++i){
		for(k=1; k<=side; ++k){
			cout<<map[i][k]<<" ";
		}
		cout<<endl;
	}
	cout<<endl;
}

int yeedong_nalsoo(){
	int color,i,k, day=0;
	map_to_temp();
	while(1){
		//map_print();
		//map_to_temp();
		clear();
		color=0;
		for(i=1; i<=side; ++i){
			for(k=1; k<=side; ++k){
				if(visit[i][k]==-1){
					if(dfs(i,k,color)>1){
						set_avg(color);
					}
					color++;
				}
			}
		}
		if(isthissamemap()) break;
		day++;
		temp_to_map();	
	}
	return day;
}

int main(void)
{
	fastio;
	cin>>side>>choiso>>choidae;
	int i,k;
	for(i=1; i<=side; ++i){
		for(k=1; k<=side; ++k){
			cin>>map[i][k];
		}
	}
	cout<<yeedong_nalsoo();
	return 0;
}
