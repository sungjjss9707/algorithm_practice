#include<iostream>
#include<vector>
using namespace std;

struct twodot{
	int y,x1,x2;
};
vector<twodot> v;
int sero,garo,garoline;
int usedot[31][11];
int li[31][11][11];

/*
void panstar(){
	int i,k,ypos,xpos;
	for(k=1; k<=garo;++k){
		ypos=1;
		xpos=k;
		for(i=1; i<=sero;++i){
			if(xpos==1){
				if(li[i][1][2]==1) xpos=2;
			}
			else if(xpos==garo){
				if(li[i][xpos][xpos-1]==1) xpos=xpos-1;
			}
			else{
				if(li[i][xpos][xpos-1]==1) xpos=xpos-1;
				else if(li[i][xpos][xpos+1]==1)xpos=xpos+1;
			}
			ypos++;
		}
		//cout<<k<<" -> "<<ypos<<","<<xpos<<"\n";
		cout<<k<<" -> "<<xpos<<"\n";
	}
}
*/
bool panstar(){
	int i,k,ypos,xpos;
	for(k=1; k<=garo;++k){
		ypos=1;
		xpos=k;
		for(i=1; i<=sero;++i){
			if(xpos==1){
				if(li[i][1][2]==1) xpos=2;
			}
			else if(xpos==garo){
				if(li[i][xpos][xpos-1]==1) xpos=xpos-1;
			}
			else{
				if(li[i][xpos][xpos-1]==1) xpos=xpos-1;
				else if(li[i][xpos][xpos+1]==1)xpos=xpos+1;
			}
			ypos++;
		}
		if(k!=xpos) return false;
	}
	return true;
}


bool addoneline(int useline){
	if(useline==1){
		if(panstar()) return true;
		return false;
	}
	int i,k;
	bool flag=false;
	for(k=1;k<garo;++k){
		for(i=1;i<=sero;++i){
			if(usedot[i][k]==0&&usedot[i][k+1]==0){
				if(usedot[i-1][k]==1||usedot[i-1][k+1]==1||i==1){
					li[i][k][k+1]=1;
					li[i][k+1][k]=1;
					usedot[i][k]=1;
					usedot[i][k+1]=1;
					flag=flag||addoneline(useline+1);
					li[i][k][k+1]=0;
					li[i][k+1][k]=0;
					usedot[i][k]=0;
					usedot[i][k+1]=0;
				}
				
			}
		}
	}
	return flag;
}

bool addtwoline(int useline){
	if(useline==2){
		if(panstar()) return true;
		return false;
	}
	int i,k;
	bool flag=false;
	for(k=1;k<garo;++k){
		for(i=1;i<=sero;++i){
			if(usedot[i][k]==0&&usedot[i][k+1]==0){
				if(usedot[i-1][k]==1||usedot[i-1][k+1]==1||i==1){
					li[i][k][k+1]=1;
					li[i][k+1][k]=1;
					usedot[i][k]=1;
					usedot[i][k+1]=1;
					flag=flag||addtwoline(useline+1);
					li[i][k][k+1]=0;
					li[i][k+1][k]=0;
					usedot[i][k]=0;
					usedot[i][k+1]=0;
				}
				
			}
		}
	}
	return flag;
}

bool addthreeline(int useline){
	if(useline==3){
		if(panstar()) return true;
		return false;
	}
	int i,k;
	bool flag=false;
	for(k=1;k<garo;++k){
		for(i=1;i<=sero;++i){
			if(usedot[i][k]==0&&usedot[i][k+1]==0){
				if(usedot[i-1][k]==1||usedot[i-1][k+1]==1||i==1){
					li[i][k][k+1]=1;
					li[i][k+1][k]=1;
					usedot[i][k]=1;
					usedot[i][k+1]=1;
					flag=flag||addthreeline(useline+1);
					li[i][k][k+1]=0;
					li[i][k+1][k]=0;
					usedot[i][k]=0;
					usedot[i][k+1]=0;
				}
				
			}
		}
	}
	return flag;
}

int main(void)
{
	cin>>garo>>garoline>>sero;
	int i,floor,lenofleft;
	for(i=0;i<garoline;++i){
		cin>>floor>>lenofleft;
		usedot[floor][lenofleft]=1;
		usedot[floor][lenofleft+1]=1;
		li[floor][lenofleft][lenofleft+1]=1;
		li[floor][lenofleft+1][lenofleft]=1;
	}
	if(panstar()){
		cout<<0;	
	}
	else if(addoneline(0)){
		cout<<1;	
	}
	else if(addtwoline(0)){
		cout<<2;	
	}
	else if(addthreeline(0)){
		cout<<3;	
	}
	else{
		cout<<-1;
	}
	return 0;
}
